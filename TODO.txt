
in Stroke:

get[straight edge from vertex] working

get[drag start on vertex] working

how to handle multiple vertices?
get [start stroke on 2 vertices, start stroke on 3 or more vertices] working
get [end stroke on 2 vertices, end stroke on 3 or more vertices] working
get [move stroke through 2 vertices, move stroke through 3 or more vertices] working

handle simultaneous events in general?


clean up Stroke any more for modularization and refactoring?











get dragging to VertexPosition working



work on GraphPositionPaths
for dragging, GPP don't make a lot of sense
they could have loops, change etc.
do not use overallPath for dragging








continuous dragging of cars

moving between rushhourboard stud and vertex





FOR ALPHA 2:

rush hour clone

applet working

screen for selecting saved games, demos, etc.
store 100x100 preview inside of .dls for easy previewing in file browsers
generate .dls files for demos


unrolling turf animation for adding road


SOON:

handle exiting for panels and tools

when world is created, make sure tool is drawn, don't wait for a move


re-add BufferStrategy
add repaint logic, only repaint needed areas
profile cpu time



test track screen
tweak road friction, car speed, car friction, etc
monitor car speed


undo/redo
user actions

for CarProximityEvents:
broadcast from moving car to other cars.
If one car is moving, and one car is not moving, there should be a broadcast from moving -> not moving
This way, if no cars are moving, there is no check for CarProximityEvents

fix strokes
already filter out capsule events when there is a higher-precedent vertex to handle
but this is not completely correct
sometimes the capsule and vertex that have close events are not overlapping
when there is something like [ENTERVERTEX, ENTERROADCAPSULE, EXITVERTEX, EXITROADCAPSULE, ...
then test whether the vertex and capsule are overlapping
if they are not overlapping, then they are just close together and the capsule should not be ignored (this leads to overlapping roads BAD!)


add countdowns/monitors:
which car will be coming next from which source?
what is the capacity of the entire world?
what is the flow of each source/sink?



add flow meter to sinks

CarProximityEvent with crashed cars

deadlocks with crashes cars

enforce prohibition of roads and mergers beyond the world sides

enforce prohibition of roads on mergers

enforce only 1 road to fixtures
interesting problem:
currently, the car proximity test works by testing distances of the first car's GP to the second car's GP, based on the first car's path
so, if the second car is not somewhere on the first car's path, no proximity is detected
if world sinks are connected, so that some car can just pass through them on its way, then it may be in the middle of a sink when 
another car is reaching it's path's end in that sink. And there are no stop signs.
The first car may be past the VertexPosition, and so it is nowhere on the second car's path
but the second car hasn't been sinked yet, so there is a crash

work on outlining:
for white edge of roads
water
fog of ware


snapping to width
snapping to height

resizing window

remember user actions, useful for undo, redo

debugging:
reversing from a crash
slowing down / speeding up simulation




LONGTERM:

rework the deadend detection, precompute it, combine code with cycle detection?

quad tree implementation

switch to using floats

switch to opengl
or at least add it

cleanup user input

DONE:

tools:
list total number of lines of code
list all imports

move canvas, controlpanel and methods to various screens

fix overlapping grass

done with Alpha 1

building

add real physics
add skids

animated grass
clear grass when adding roads and vertices

clear grass when skidding


profile painting problems

scripting:
saving to files
reading from files

lines and curves for roads
spline/curve editor


quadrant editor

fix seams in quadrant map for world and editor

add cubic curve cursor

for knobs (circle, quad, cubic):
gridify


objectify grid
zooming in makes grid change
keep grid squares about 64 pixels
48 - 80 pixels


only on grid within active quadrants

with grid on, switching to other cursors snaps to grid
and vice versa


add quad curve cursor

add circular road cursor

straightedge cursor:
allow starting in roads
draw capsules

remove Road-capsule code, use CapsuleSequence code

fix stopsigns in loops

draw a loop
stand-alone loop

self-intersecting stroke


decimate VIEW

profile FourByFourGrid init

delete merger connected to roads:
vertices stay behind

fix b2d box drawing showing that braked cars are moving
seems to be jbox2d problem

do not spawn if close to a crashed car

draw jbox2d aabb tree

actually remember both VertexArrivalEvents and CarProximityEvents

profile precomputeHitTestData when there are a lot of overlaps

separate out new precomputeHitTestData (which is currently buggy) from old
compare differences in hitMap

bring back real physics
need friction for crashes

fix problem with doing 2 straight edge cursors
the merging messes up 

fix intersection problem with straight edge cursors

good car id painting while debugging

log driving events for easier deadlock debugging

car report

pausing


fix deadlock detection to get head-on collisions working

get proper cycle detection in to get 2+-cycles

fixture cursor:
switch directions

merger:
switch directions

figure out fixing VIEW.canvasToWorld when preview has been dragged

assert canvasGrassImage and canvasGraphImage are never bigger than canvas
fix viewport problems

cursor size independent of zoom

cursor leaving/entering canvas

zooming keeps canvasCenter constant

move out all of the PIXELS_PER_METER usage and draw shapes in world coords
no uses of AffineTransform

fix arrow directions

map on preview

better brake lights

add Quadrant class

fix issues with loops in roads

enforce prohibition of cars beyonds world sides

fixture cursor working with quadrants

add Quadrant
just 2x2 to start

call carProximityTest for each path, not each car

snap to grid for inserting intersections and sources/sinks

insert world sources/sinks
cursor with outline connecting source and sink along edge of quadrant

insert stand-alone intersections

1-way directional arrows for roads
hit key to change direction of arrows

hover over where signs and arrows would be, hit key to add them

fix being too close to stop signs (think I've done this)

handle 2 events:
accelerating through intersection, and close to another car

radius for cars to see car in front on same road and brake

funky behavior with goalPoints and car proximity

car ids

skeleton in vertices

with ideal physics, need to update goalPoint intelligently
when at stopsign, gaolPoint is not being updated and it ending up directly under center of car, which leads to crazy behavior

ideal physics

crashes
find a fire gif and start animating sprites

fix adding 2 roads to a vertex and making it extend past world aabb
does not refresh world aabb

fix all seen problems with local input!

animated grass

test if Merger is hitting anything else before adding


skidding if completely off road

intersecting methods
containment methods

add shapes to capsules, vertices, cars, mergers, signs

add SAT code
find uses of halfPlane
reexamine all bestHitTest implementations
WorldSource.active()
Car.computeDynamicProperties()


add Circle and Quad classes

skids
line segments of when a car goes off-road
work on getting a separate layer to draw skids on, don't want individual line segment accumulating forever

remove sweepCircleCap

fix car goal point
overallPos is correct, but goalPoint is not correct inside of mergers

fix vertex distance problem
wiring up a merger backwards doesn't work

fix automatic merging of merger vertices
add 2 roads to a merger vertex

outline for regular cursor

skeleton for roads and mergers

add arrow images for sources and sinks

ON HOLD FOR NOW:

draw a buffer around the preview, draw the aabb not the world rect

option to switch between real and ideal physics


radius for cars to see a crash and reroute

drive straight from one border to another without going through vertex center

status of cursor
how many vertices, capsules, etc. currently hitting?
diagnostics


work on .graph package
move classes
make Graph a pure graph class
move Road, Merger, Sink, Source, etc. to .model


road shape desription
lines and circular arcs
adding capsules
stop using area, areax
constructive area geometry for edges

lower precision on stroke world points
