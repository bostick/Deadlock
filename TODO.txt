
IMMEDIATELY:

start work on menu
start work on popup menu

SOON:

snapping to width
sna[[ing to height

100 -> PREVIEW_WIDTH

resizing window

remember user actions, useful for undo, redo


draw a loop
stand-alone loop

self-intersecting stroke


add countdowns/monitors:
which car will be coming next from which source?
what is the capacity of the entire world?
what is the flow of each source/sink?


debugging:
reversing from a crash
slowing down / speeding up simulation


add Level
scripting, saving, editing, etc.

start work on popup menu

LONGTERM:

quad tree implementation

switch to using floats

switch to opengl
or at least add it

cleanup user input
lines and curves for roads
spline/curve editor


DONE:

figure out fixing VIEW.canvasToWorld when preview has been dragged

assert canvasGrassImage and canvasGraphImage are never bigger than canvas
fix viewport problems

cursor size independent of zoom

cursor leaving/entering canvas

zooming keeps canvasCenter constant

move out all of the PIXELS_PER_METER usage and draw shapes in world coords
no uses of AffineTransform

fix arrow directions

map on preview

better brake lights

enforce only 1 road to fixtures
interesting problem:
currently, the car proximity test works by testing distances of the first car's GP to the second car's GP, based on the first car's path
so, if the second car is not somewhere on the first car's path, no proximity is detected
if world sinks are connected, so that some car can just pass through them on its way, then it may be in the middle of a sink when 
another car is reaching it's path's end in that sink. And there are no stop signs.
The first car may be past the VertexPosition, and so it is nowhere on the second car's path
but the second car hasn't been sinked yet, so there is a crash

add Quadrant class

fix issues with loops in roads

enforce prohibition of cars beyonds world sides

enforce prohibition of roads and mergers beyond the world sides

enforce prohibition of roads on mergers

fixture cursor working with quadrants

add Quadrant
just 2x2 to start

call carProximityTest for each path, not each car

snap to grid for inserting intersections and sources/sinks

insert world sources/sinks
cursor with outline connecting source and sink along edge of quadrant

insert stand-alone intersections

1-way directional arrows for roads
hit key to change direction of arrows

hover over where signs and arrows would be, hit key to add them

fix being too close to stop signs (think I've done this)

handle 2 events:
accelerating through intersection, and close to another car

radius for cars to see car in front on same road and brake

funky behavior with goalPoints and car proximity

car ids

skeleton in vertices

with ideal physics, need to update goalPoint intelligently
when at stopsign, gaolPoint is not being updated and it ending up directly under center of car, which leads to crazy behavior

ideal physics

crashes
find a fire gif and start animating sprites

fix adding 2 roads to a vertex and making it extend past world aabb
does not refresh world aabb

fix all seen problems with local input!

animated grass

test if Merger is hitting anything else before adding


skidding if completely off road

intersecting methods
containment methods

add shapes to capsules, vertices, cars, mergers, signs

add SAT code
find uses of halfPlane
reexamine all bestHitTest implementations
WorldSource.active()
Car.computeDynamicProperties()


add Circle and Quad classes

skids
line segments of when a car goes off-road
work on getting a separate layer to draw skids on, don't want individual line segment accumulating forever

remove sweepCircleCap

fix car goal point
overallPos is correct, but goalPoint is not correct inside of mergers

fix vertex distance problem
wiring up a merger backwards doesn't work

fix automatic merging of merger vertices
add 2 roads to a merger vertex

outline for regular cursor

skeleton for roads and mergers

add arrow images for sources and sinks

ON HOLD FOR NOW:

draw a buffer around the preview, draw the aabb not the world rect

option to switch between real and ideal physics


radius for cars to see a crash and reroute

drive straight from one border to another without going through vertex center

status of cursor
how many vertices, capsules, etc. currently hitting?
diagnostics


work on .graph package
move classes
make Graph a pure graph class
move Road, Merger, Sink, Source, etc. to .model


road shape desription
lines and circular arcs
adding capsules
stop using area, areax
constructive area geometry for edges

lower precision on stroke world points
