
04-12 09:15:37.921: E/AndroidRuntime(32072): FATAL EXCEPTION: Thread-11
04-12 09:15:37.921: E/AndroidRuntime(32072): java.lang.ClassCastException: com.gutabi.bypass.menu.MainMenu
04-12 09:15:37.921: E/AndroidRuntime(32072): 	at com.gutabi.bypass.level.BypassWorld.handleZooming(BypassWorld.java:319)
04-12 09:15:37.921: E/AndroidRuntime(32072): 	at com.gutabi.bypass.level.BypassDriver.postStep(BypassDriver.java:20)
04-12 09:15:37.921: E/AndroidRuntime(32072): 	at com.gutabi.bypass.level.BypassCar.postStep(BypassCar.java:155)
04-12 09:15:37.921: E/AndroidRuntime(32072): 	at com.gutabi.deadlock.world.CarMap.postStep(CarMap.java:106)
04-12 09:15:37.921: E/AndroidRuntime(32072): 	at com.gutabi.deadlock.world.World.postStep(World.java:155)
04-12 09:15:37.921: E/AndroidRuntime(32072): 	at com.gutabi.deadlock.world.World.integrate(World.java:133)
04-12 09:15:37.921: E/AndroidRuntime(32072): 	at com.gutabi.deadlock.world.SimulationRunnable.run(SimulationRunnable.java:64)
04-12 09:15:37.921: E/AndroidRuntime(32072): 	at java.lang.Thread.run(Thread.java:1019)

04-12 09:02:39.007: E/AndroidRuntime(32008): FATAL EXCEPTION: main
04-12 09:02:39.007: E/AndroidRuntime(32008): java.lang.OutOfMemoryError: bitmap size exceeds VM budget
04-12 09:02:39.007: E/AndroidRuntime(32008): 	at android.graphics.Bitmap.nativeCreate(Native Method)
04-12 09:02:39.007: E/AndroidRuntime(32008): 	at android.graphics.Bitmap.createBitmap(Bitmap.java:507)
04-12 09:02:39.007: E/AndroidRuntime(32008): 	at com.gutabi.bypass.PlatformImpl.createTransparentImage(PlatformImpl.java:116)
04-12 09:02:39.007: E/AndroidRuntime(32008): 	at com.gutabi.deadlock.ui.Label.render(Label.java:67)
04-12 09:02:39.007: E/AndroidRuntime(32008): 	at com.gutabi.deadlock.ui.MenuItem.render(MenuItem.java:67)
04-12 09:02:39.007: E/AndroidRuntime(32008): 	at com.gutabi.deadlock.ui.Menu.render(Menu.java:209)
04-12 09:02:39.007: E/AndroidRuntime(32008): 	at com.gutabi.bypass.menu.LevelMenu.action(LevelMenu.java:37)
04-12 09:02:39.007: E/AndroidRuntime(32008): 	at com.gutabi.bypass.menu.MainMenu$1.action(MainMenu.java:18)
04-12 09:02:39.007: E/AndroidRuntime(32008): 	at com.gutabi.deadlock.ui.Menu.released(Menu.java:99)
04-12 09:02:39.007: E/AndroidRuntime(32008): 	at com.gutabi.deadlock.ui.MenuTool.released(MenuTool.java:151)
04-12 09:02:39.007: E/AndroidRuntime(32008): 	at com.gutabi.deadlock.ui.Panel.released(Panel.java:33)
04-12 09:02:39.007: E/AndroidRuntime(32008): 	at com.gutabi.deadlock.ui.PlatformContentPane.releasedDriver(PlatformContentPane.java:62)
04-12 09:02:39.007: E/AndroidRuntime(32008): 	at com.gutabi.bypass.MainActivity.onTouchEvent(MainActivity.java:90)
04-12 09:02:39.007: E/AndroidRuntime(32008): 	at android.app.Activity.dispatchTouchEvent(Activity.java:2145)
04-12 09:02:39.007: E/AndroidRuntime(32008): 	at com.android.internal.policy.impl.PhoneWindow$DecorView.dispatchTouchEvent(PhoneWindow.java:1903)
04-12 09:02:39.007: E/AndroidRuntime(32008): 	at android.view.ViewRoot.deliverPointerEvent(ViewRoot.java:2194)
04-12 09:02:39.007: E/AndroidRuntime(32008): 	at android.view.ViewRoot.handleMessage(ViewRoot.java:1878)
04-12 09:02:39.007: E/AndroidRuntime(32008): 	at android.os.Handler.dispatchMessage(Handler.java:99)
04-12 09:02:39.007: E/AndroidRuntime(32008): 	at android.os.Looper.loop(Looper.java:130)
04-12 09:02:39.007: E/AndroidRuntime(32008): 	at android.app.ActivityThread.main(ActivityThread.java:3806)
04-12 09:02:39.007: E/AndroidRuntime(32008): 	at java.lang.reflect.Method.invokeNative(Native Method)
04-12 09:02:39.007: E/AndroidRuntime(32008): 	at java.lang.reflect.Method.invoke(Method.java:507)
04-12 09:02:39.007: E/AndroidRuntime(32008): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:839)
04-12 09:02:39.007: E/AndroidRuntime(32008): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:597)
04-12 09:02:39.007: E/AndroidRuntime(32008): 	at dalvik.system.NativeStart.main(Native Method)






get BypassAWT build working

get BypassAndroid working (don't see MainActivity crap on startup)

switch over to using bypass everywhere
update artwork

icons for everything







scoring
time taken
moves made
preference system
saving scores, current game, 




select levels for lite version
select levels for full version
setup renderer in Mathematica
visually compare similar levels
similar: lots of cars in same position and similar number of moves




density independent pixels
use graph paper and sketch out different screens and layouts first




profile android
audit object creation
think about mutable shapes, etc.






activity lifecycle

problem with backing out, and starting again, threads

http://developer.android.com/reference/android/app/Activity.html#ActivityLifecycle

handle back button
stacks





when dragging, if within 25% of stud, just go to it


quadrant editor moving hiliting




SOON:

spiraling in GPPP.generalSearch?



easter egg: click on a grass, do something
something: cars are now intangible
in board description, a missing - or | means to allow the car off of the board...

allow custom boards? does bigger than 6x6 work?









DONE:

save metadata in levels.zip
number of levels, etc.

zooming
as car is leaving grid, zoom


little shining animation for red car to start, and level buttons on level menu

scrolling for menus

start zooming as car leaves grid

max vel for flinging

dragging car to edge of grid takes it 


generalize menu painting

put up WinningMenu


figure out best way for zoom to follow car
so that dragging is not interrupted (kind of)

just paint all background on repaint

add perimeters around joint studs

when goign from stud to stud, always coast to the next stud, not to the previous one

make sure dragging doesn't get snagged

add long road from exit

coast from winning position off screen

test boards with exits on left and right, make sure exiting works

catch cars that are coasting

flicking

fix releasing on a vertex, snapping and blocking road

do coasting within the board, from stud to stud
 
when dragging, determine whether to coast forward or backward

save first vertex visited when dragging.

when released on a road, try to go to the other vertex (if space is available)



stop coasting after reentering board
 